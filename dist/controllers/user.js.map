{"version":3,"sources":["../../src/controllers/user.js"],"names":["more","req","res","next","send","signup","body","name","pass","rePass","Error","user","UserModel","bcrypt","hashSync","save","then","end","catch","signin","findOne","err","isOk","compareSync","token","jwt","encode","_id","isAdmin","config","admin","exp","add","valueOf","jwtSecret","opts","path","maxAge","signed","httpOnly","cookie","cookieName","json"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,IAAMA,sBAAO,SAAPA,IAAO,CAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC1CD,QAAIE,IAAJ,CAAS,yBAAT;AACH,CAFM;;AAIA,IAAMC,0BAAS,SAATA,MAAS,CAAUJ,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA,oBACbF,IAAIK,IADS;AAAA,QACpCC,IADoC,aACpCA,IADoC;AAAA,QAC9BC,IAD8B,aAC9BA,IAD8B;AAAA,QACxBC,MADwB,aACxBA,MADwB;;;AAG5C,QAAID,SAASC,MAAb,EAAqB;AACjB,eAAON,KAAK,IAAIO,KAAJ,CAAU,QAAV,CAAL,CAAP;AACH;;AAED,QAAMC,OAAO,IAAIC,cAAJ,EAAb;AACAD,SAAKJ,IAAL,GAAYA,IAAZ;AACAI,SAAKH,IAAL,GAAYK,iBAAOC,QAAP,CAAgBN,IAAhB,EAAsB,EAAtB,CAAZ;AACAG,SACKI,IADL,GAEKC,IAFL,CAEU,YAAM;AACRd,YAAIe,GAAJ;AACH,KAJL,EAKKC,KALL,CAKWf,IALX;;AAOA;;;;;;;AAOH,CAxBM;;AA0BA,IAAMgB,0BAAS,SAATA,MAAS,CAAUlB,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAAA,qBACrBF,IAAIK,IADiB;AAAA,QACpCC,IADoC,cACpCA,IADoC;AAAA,QAC9BC,IAD8B,cAC9BA,IAD8B;;;AAG5CI,mBAAUQ,OAAV,CAAkB,EAAEb,UAAF,EAAlB,EAA4B,UAAUc,GAAV,EAAeV,IAAf,EAAqB;AAC7C,YAAIU,OAAO,CAACV,IAAZ,EAAkB;AACd,mBAAOR,KAAK,IAAIO,KAAJ,CAAU,OAAV,CAAL,CAAP;AACH,SAFD,MAEO;AACH,gBAAMY,OAAOT,iBAAOU,WAAP,CAAmBf,IAAnB,EAAyBG,KAAKH,IAA9B,CAAb;AACA,gBAAI,CAACc,IAAL,EAAW;AACP,uBAAOnB,KAAK,IAAIO,KAAJ,CAAU,MAAV,CAAL,CAAP;AACH;;AAED;AACA,gBAAMc,QAAQC,oBAAIC,MAAJ,CACV;AACIC,qBAAKhB,KAAKgB,GADd;AAEIpB,sBAAMI,KAAKJ,IAFf;AAGIqB,yBAASjB,KAAKJ,IAAL,KAAcsB,iBAAOC,KAArB,GAA6B,IAA7B,GAAoC,KAHjD;AAIIC,qBAAK,wBAASC,GAAT,CAAa,MAAb,EAAqB,EAArB,EAAyBC,OAAzB;AAJT,aADU,EAOVJ,iBAAOK,SAPG,CAAd;;AAUA,gBAAMC,OAAO;AACTC,sBAAM,GADG;AAETC,wBAAQ,wBAASL,GAAT,CAAa,MAAb,EAAqB,EAArB,EAAyBC,OAAzB,EAFC;AAGTK,wBAAQ,IAHC;AAITC,0BAAU;AAJD,aAAb;;AAOA;AACArC,gBAAIsC,MAAJ,CAAWX,iBAAOY,UAAlB,EAA8BjB,KAA9B,EAAqCW,IAArC;AACAjC,gBAAIwC,IAAJ,CAAS,EAAElB,YAAF,EAAT;AACH;AACJ,KA/BD;AAgCH,CAnCM","file":"user.js","sourcesContent":["import bcrypt from 'bcrypt';\r\nimport PostModel from '../models/post';\r\nimport UserModel from '../models/user';\r\nimport config from '../config';\r\nimport jwt from 'jwt-simple';\r\nimport moment from 'moment';\r\n\r\nexport const more = function (req, res, next) {\r\n    res.send('respond with a resource');\r\n};\r\n\r\nexport const signup = function (req, res, next) {\r\n    const { name, pass, rePass } = req.body;\r\n\r\n    if (pass !== rePass) {\r\n        return next(new Error('两次密码不对'));\r\n    }\r\n\r\n    const user = new UserModel();\r\n    user.name = name;\r\n    user.pass = bcrypt.hashSync(pass, 10);\r\n    user\r\n        .save()\r\n        .then(() => {\r\n            res.end();\r\n        })\r\n        .catch(next);\r\n\r\n    /* (function (err) {\r\n    if (err) {\r\n      next(err);\r\n    } else {\r\n      res.end();\r\n    }\r\n  }); */\r\n};\r\n\r\nexport const signin = function (req, res, next) {\r\n    const { name, pass } = req.body;\r\n\r\n    UserModel.findOne({ name }, function (err, user) {\r\n        if (err || !user) {\r\n            return next(new Error('找不到用户'));\r\n        } else {\r\n            const isOk = bcrypt.compareSync(pass, user.pass);\r\n            if (!isOk) {\r\n                return next(new Error('密码不对'));\r\n            }\r\n\r\n            // 生产 token\r\n            const token = jwt.encode(\r\n                {\r\n                    _id: user._id,\r\n                    name: user.name,\r\n                    isAdmin: user.name === config.admin ? true : false,\r\n                    exp: moment().add('days', 30).valueOf(),\r\n                },\r\n                config.jwtSecret\r\n            );\r\n\r\n            const opts = {\r\n                path: '/',\r\n                maxAge: moment().add('days', 30).valueOf(),\r\n                signed: true,\r\n                httpOnly: true\r\n            };\r\n\r\n            // 将 token 保存在 cookie 里。\r\n            res.cookie(config.cookieName, token, opts);\r\n            res.json({ token });\r\n        }\r\n    });\r\n}"]}